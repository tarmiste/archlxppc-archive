# $Id: PKGBUILD 146528 2012-01-12 16:16:15Z andyrtr $
# x86 Maintainer: Andreas Radke <andyrtr@archlinux.org>
# Contributor: Jan de Groot <jgc@archlinux.org>
# Contributor: Guillaume ALAUX <guillaume@archlinux.org>

pkgname=('jre7-openjdk-headless' 'jre7-openjdk' 'jdk7-openjdk' 'openjdk7-src') 
 # ToDo -demo -doc packages, see Debian file lists http://packages.debian.org/source/wheezy/openjdk-7
pkgbase=java7-openjdk
_java_ver=7
_openjdk_build=b147
_openjdk_date=27_jun_2011
_icedtea_ver=2.0
_date=20110922

# check "${srcdir}/icedtea7"/Makefile.am
_CORBA_CHANGESET=4d9e4fb8af09
_HOTSPOT_CHANGESET=b28ae681bae0
_JAXP_CHANGESET=948e734135ea
_JAXWS_CHANGESET=a2ebfdc9db7e
_JDK_CHANGESET=2054526dd141
_LANGTOOLS_CHANGESET=9b85f1265346
_OPENJDK_CHANGESET=0a76e5390e68

_bootstrap=0 # 0/1 for quick build or full bootstrap

pkgver=${_java_ver}.${_openjdk_build}_${_icedtea_ver}
pkgrel=5
arch=('ppc' 'i686' 'x86_64')
url="http://icedtea.classpath.org"
license=('custom')
options=('!emptydirs')
makedepends=('jdk7-openjdk' 'libxp' 'libxslt' 
             'alsa-lib' 'apache-ant>=1.8.1' 'giflib'
             'rhino' 'libpulse>=0.9.11' 'zip' 'unzip' 'cpio' 'fastjar') # fastjar`?
[ "$_bootstrap" = "1" ] && makedepends=(${makedepends[@]} 'eclipse-ecj')

_url=http://icedtea.classpath.org/hg/release/icedtea7-forest-2.0/archive
#_url=http://icedtea.classpath.org/hg/icedtea7-forest/archive
source=(http://icedtea.classpath.org/download/source/icedtea-${_icedtea_ver}.tar.gz
        ${_url}/${_OPENJDK_CHANGESET}.tar.gz						# openjdk.tar.gz
        ${_url}/${_CORBA_CHANGESET}.tar.gz						# corba.tar.gz
        ${_url}/${_JAXP_CHANGESET}.tar.gz						# jaxp.tar.gz
        ${_url}/${_JAXWS_CHANGESET}.tar.gz						# jaxws.tar.gz
        ${_url}/${_JDK_CHANGESET}.tar.gz						# jdk.tar.gz
        ${_url}/${_LANGTOOLS_CHANGESET}.tar.gz						# langtools.tar.gz
        ${_url}/${_HOTSPOT_CHANGESET}.tar.gz						# hotspot.tar.gz
        fontconfig-paths.diff
        fix_corba_cmds_path.diff
        openjdk7_fix_jdk_cmds_path.diff
        openjdk7_nonreparenting-wm.diff
        jdk7-openjdk.profile
        jdk7-openjdk.profile.csh
        jre7-openjdk.profile
        jre7-openjdk.profile.csh
	glibc2_15.diff)

#http://www.java.net/download/openjdk/jdk${_java_ver}/promoted/${_openjdk_build}/openjdk-${_java_ver}-fcs-src-${_openjdk_build}-${_openjdk_date}.zip

noextract=("${_OPENJDK_CHANGESET}.tar.gz"
           "${_CORBA_CHANGESET}.tar.gz"
           "${_JAXP_CHANGESET}.tar.gz"
           "${_JAXWS_CHANGESET}.tar.gz"
           "${_JDK_CHANGESET}.tar.gz"
           "${_LANGTOOLS_CHANGESET}.tar.gz"
           "${_HOTSPOT_CHANGESET}.tar.gz")

  _jvmdir=/usr/lib/jvm/java-7-openjdk
  
  [ "$CARCH" = "x86_64" ] && _JARCH=amd64
  [ "$CARCH" = "i686" ] && _JARCH=i386
  [ "$CARCH" = "ppc" ] && _JARCH=ppc
  
build() {
  cd "${srcdir}/icedtea-${_icedtea_ver}"

  unset JAVA_HOME JDK_HOME CLASSPATH JAVAC JAVACFLAGS
  
  # default is to build with first found java-environment found in our repos - is jdk7-openjdk
  [ -f /etc/profile.d/jdk.sh ] && . /etc/profile.d/jdk.sh
  
  unset MAKEFLAGS # parallel build is currently broken 
  export ALT_PARALLEL_COMPILE_JOBS="${MAKEFLAGS/-j}"
  export HOTSPOT_BUILD_JOBS="${ALT_PARALLEL_COMPILE_JOBS}"

  . /etc/profile.d/apache-ant.sh

  cp ${srcdir}/*.diff ${srcdir}/icedtea-${_icedtea_ver}/patches
  export DISTRIBUTION_PATCHES="patches/fontconfig-paths.diff patches/fix_corba_cmds_path.diff patches/openjdk7_fix_jdk_cmds_path.diff patches/openjdk7_nonreparenting-wm.diff patches/glibc2_15.diff"

  if [ "$_bootstrap" = "1" ]; then
     BOOTSTRAPOPT="--enable-bootstrap --with-ecj-jar=/usr/share/java/ecj.jar"
   else 
     BOOTSTRAPOPT="--disable-bootstrap"
  fi

  ./configure \
	$BOOTSTRAPOPT \
        --with-parallel-jobs="${MAKEFLAGS/-j}" \
        --disable-tests \
        --with-pkgversion="ArchLinux build ${pkgver}-${pkgrel}-${CARCH}" \
        --with-jdk-home=${JAVA_HOME} \
        --with-openjdk-src-zip=${srcdir}/${_OPENJDK_CHANGESET}.tar.gz \
        --with-hotspot-src-zip=${srcdir}/${_HOTSPOT_CHANGESET}.tar.gz \
        --with-corba-src-zip=${srcdir}/${_CORBA_CHANGESET}.tar.gz \
        --with-jaxp-src-zip=${srcdir}/${_JAXP_CHANGESET}.tar.gz \
        --with-jaxws-src-zip=${srcdir}/${_JAXWS_CHANGESET}.tar.gz \
        --with-jdk-src-zip=${srcdir}/${_JDK_CHANGESET}.tar.gz \
        --with-langtools-src-zip=${srcdir}/${_LANGTOOLS_CHANGESET}.tar.gz \
        --enable-pulse-java \
        --enable-nss \
        --with-rhino
	#--help

#     --enable-systemtap      Enable inclusion of SystemTap trace support - needs systemtab from AUR + --with-abs-install-dir=/usr/lib/jvm/java-7-openjdk The absolute path where the j2sdk-image dir will be installed
  
  make
}

check() {
  cd "${srcdir}/icedtea-${_icedtea_ver}"
  make -k check
}

package_jre7-openjdk-headless() {
  pkgdesc="Free Java environment based on OpenJDK 7.0 with IcedTea7 replacing binary plugs - Minimal Java runtime - needed for executing non GUI Java programs"
  depends=('libjpeg-turbo' 'lcms2' 'nss'
           'ca-certificates-java' 'rhino')
  optdepends=('libcups: needed for Java Mauve support - libmawt.so'
              'fontconfig: needed for Java Mauve support - libmawt.so')
  provides=('java-runtime=7')
  conflicts=('java-runtime')
  #  replaces=('openjdk6') # once we remove openjdk6 pkg from the repos
  backup=(etc/profile.d/jre.sh
          etc/profile.d/jre.csh
          etc/java-7-openjdk/calendars.properties
	  etc/java-7-openjdk/content-types.properties
          etc/java-7-openjdk/cursors/cursors.properties
          etc/java-7-openjdk/flavormap.properties
          etc/java-7-openjdk/fontconfig.bfc
	  etc/java-7-openjdk/fontconfig.properties
          etc/java-7-openjdk/jvm.cfg
          etc/java-7-openjdk/logging.properties
          etc/java-7-openjdk/management/jmxremote.access
          etc/java-7-openjdk/management/jmxremote.password
          etc/java-7-openjdk/management/management.properties
          etc/java-7-openjdk/management/snmp.acl
          etc/java-7-openjdk/net.properties
          etc/java-7-openjdk/psfont.properties.ja
          etc/java-7-openjdk/psfontj2d.properties
          etc/java-7-openjdk/security/java.policy
          etc/java-7-openjdk/security/java.security
          etc/java-7-openjdk/security/nss.cfg
          etc/java-7-openjdk/sound.properties
          etc/java-7-openjdk/tz.properties)
  install=jre7-openjdk-headless.install

  cd "${srcdir}/icedtea-${_icedtea_ver}/openjdk.build/j2sdk-image/jre"

  mv lib/fontconfig.Ubuntu.properties.src lib/fontconfig.properties
  mv lib/fontconfig.Ubuntu.bfc lib/fontconfig.bfc
  rm -f lib/fontconfig.*.bfc
  rm -f lib/fontconfig.*.properties.src 
  rm -f lib/fontconfig.properties.src

  install -d -m755 ${pkgdir}/${_jvmdir}/jre/
  cp -a bin lib ${pkgdir}/${_jvmdir}/jre

  # Install man pages
  pushd ../../j2re-image/man
  install -m755 -d ${pkgdir}/usr/share/man/{,ja/}man1/
  install -m644 man1/*.1 ${pkgdir}/usr/share/man/man1
  install -m644 ja_JP.UTF-8/man1/*.1 ${pkgdir}/usr/share/man/ja/man1
  popd

  # more files that belong to the desktop package
  mkdir ${srcdir}/tmp-desktop-jre
  for file in \
	"/usr/lib/jvm/java-7-openjdk/jre/bin/policytool" \
	"/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/libjsoundalsa.so" \
	"/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/libpulse-java.so" \
	"/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/libsplashscreen.so" \
	"/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/xawt/libmawt.so" \
	"/usr/share/man/ja/man1/policytool.1" \
	"/usr/share/man/man1/policytool.1"; do
     dirname=`dirname $file`
     install -dm755 ${srcdir}/tmp-desktop-jre/$dirname || /bin/true
     # mv file from fakeinstall to pkgdir
     mv ${pkgdir}/$file ${srcdir}/tmp-desktop-jre$file
  done
  rmdir ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/xawt

  # Link binaries into /usr/bin
  pushd ${pkgdir}/${_jvmdir}/jre/bin
  install -m755 -d ${pkgdir}/usr/bin/
  for file in *; do
    ln -sf ${_jvmdir}/jre/bin/${file} ${pkgdir}/usr/bin
  done
  popd

  # Link JKS keystore from ca-certificates-java
  rm -f ${pkgdir}/${_jvmdir}/jre/lib/security/cacerts
  ln -sf /etc/ssl/certs/java/cacerts "${pkgdir}/${_jvmdir}/jre/lib/security/cacerts"

  # Set some variables
  install -m755 -d ${pkgdir}/etc/profile.d/
  install -m755 ${srcdir}/jre7-openjdk.profile ${pkgdir}/etc/profile.d/jre.sh
  install -m755 ${srcdir}/jre7-openjdk.profile.csh ${pkgdir}/etc/profile.d/jre.csh

  # Install license
  install -m755 -d ${pkgdir}/usr/share/licenses/${pkgbase}/
  install -m644 ASSEMBLY_EXCEPTION LICENSE THIRD_PARTY_README \
                 ${pkgdir}/usr/share/licenses/${pkgbase}
		 
  # Put some more files under backup control
  install -m755 -d ${pkgdir}/etc/java-7-openjdk/
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/*.properties* ${pkgdir}/etc/java-7-openjdk/
  # install dummy links to make them found by JAVA
  cd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/
  for file in `ls ${pkgdir}/etc/java-7-openjdk/*.properties*`; do
    ln -vsf /etc/java-7-openjdk/`basename $file` .
  done
  # some more
  install -m755 -d ${pkgdir}/etc/java-7-openjdk/{cursors,management,security}
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/images/cursors/cursors.properties ${pkgdir}/etc/java-7-openjdk/cursors/
  pushd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/images/cursors/
    ln -vsf /etc/java-7-openjdk/cursors/cursors.properties .
  popd
  mv ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/jmxremote.password.template ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/jmxremote.password
  mv ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/snmp.acl.template ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/snmp.acl
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management/{management.properties,jmxremote.access,jmxremote.password,snmp.acl} ${pkgdir}/etc/java-7-openjdk/management/
  pushd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/management
    ln -vsf /etc/java-7-openjdk/management/{management.properties,jmxremote.access,jmxremote.password,snmp.acl} .
  popd
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/security/{java.policy,java.security,nss.cfg} ${pkgdir}/etc/java-7-openjdk/security/
  pushd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/security
    ln -vsf /etc/java-7-openjdk/security/{java.policy,java.security,nss.cfg} .
  popd
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/fontconfig.bfc ${pkgdir}/etc/java-7-openjdk/
  install -m644 ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/jvm.cfg ${pkgdir}/etc/java-7-openjdk/
  pushd ${pkgdir}/usr/lib/jvm/java-7-openjdk/jre/lib/${_JARCH}/
     ln -vsf /etc/java-7-openjdk/jvm.cfg .
  popd
}
	 
package_jre7-openjdk() {
  pkgdesc="Free Java environment based on OpenJDK 7.0 with IcedTea7 replacing binary plugs -Full Java runtime environment - needed for executing Java GUI and Webstart programs"
  depends=('jre7-openjdk-headless' 'xdg-utils' 'hicolor-icon-theme')
  optdepends=('icedtea-web-java7: web browser plugin + Java Web Start'
             'alsa-lib: for basic sound support'
             'giflib: for gif format support'
             'libpulse: for advanced sound support'
	     'gtk2: for the Gtk+ look and feel - desktop usage')
  install=jre7-openjdk.install

  mv ${srcdir}/tmp-desktop-jre/* ${pkgdir}
  # Link binaries into /usr/bin
  pushd ${pkgdir}/${_jvmdir}/jre/bin
  install -m755 -d ${pkgdir}/usr/bin/
  for file in *; do
    ln -sf ${_jvmdir}/jre/bin/${file} ${pkgdir}/usr/bin
  done
  popd
  
  cd "${srcdir}/icedtea-${_icedtea_ver}/openjdk.build/j2sdk-image/jre"

  # Install icons and menu entries
  for s in 16 24 32 48 ; do
    install -m755 -d ${pkgdir}/usr/share/icons/hicolor/${s}x${s}/apps/
    install -m644 ../../../openjdk/jdk/src/solaris/classes/sun/awt/X11/java-icon${s}.png \
                  ${pkgdir}/usr/share/icons/hicolor/${s}x${s}/apps/java.png
  done
  
  # Install desktop files.
  install -m755 -d ${pkgdir}/usr/share/applications
  install -m644 ${srcdir}/icedtea-${_icedtea_ver}/{jconsole,policytool}.desktop ${pkgdir}/usr/share/applications
}

package_jdk7-openjdk() {
  pkgdesc="Free Java environment based on OpenJDK 7.0 with IcedTea7 replacing binary plugs - SDK"
  depends=('jre7-openjdk')
  provides=('java-environment=7')
  conflicts=('java-environment')
  #  replaces=('openjdk6')
  backup=(etc/profile.d/jdk.sh etc/profile.d/jdk.csh)

  cd "${srcdir}/icedtea-${_icedtea_ver}/openjdk.build/j2sdk-image"

  # Main files
  install -m755 -d ${pkgdir}/${_jvmdir}/

  cp -a demo include lib sample ${pkgdir}/${_jvmdir}

  # 'bin' files
  pushd bin
  install -m755 -d ${pkgdir}/${_jvmdir}/bin/ \
                   ${pkgdir}/usr/bin/ \
                   ${pkgdir}/usr/share/man/{,ja/}man1/

  # 'java-rmi.cgi' will be handled separately as it should not be in the PATH and has no man page
  for b in $(ls | grep -v java-rmi.cgi); do
    if [ -e ../jre/bin/${b} ]; then
      # Provide a link of the jre binary in the jdk/bin/ directory
      ln -s ../jre/bin/${b} ${pkgdir}/${_jvmdir}/bin/${b}
    else
      # Copy binary to jdk/bin/
      install -m755 ${b} ${pkgdir}/${_jvmdir}/bin/${b}
      # Copy man page
      install -m644 ../man/man1/${b}.1 ${pkgdir}/usr/share/man/man1/${b}.1
      install -m644 ../man/ja/man1/${b}.1 ${pkgdir}/usr/share/man/ja/man1/${b}.1
      # Link from /bin/
      ln -s ${_jvmdir}/bin/${b} ${pkgdir}/usr/bin/${b}
    fi
  done
  popd

  # Handling 'java-rmi.cgi' separately
  install -m755 -D bin/java-rmi.cgi ${pkgdir}/${_jvmdir}/bin/java-rmi.cgi

  # Set some variables
  install -m755 -d ${pkgdir}/etc/profile.d/
  install -m755 ${srcdir}/${pkgname}.profile ${pkgdir}/etc/profile.d/jdk.sh
  install -m755 ${srcdir}/${pkgname}.profile.csh ${pkgdir}/etc/profile.d/jdk.csh
}

package_openjdk7-src() {
  pkgdesc="Free Java environment based on OpenJDK 7.0 with IcedTea7 replacing binary plugs - sources"

  install -D ${srcdir}/icedtea-${_icedtea_ver}/openjdk.build/j2sdk-image/src.zip \
             ${pkgdir}/${_jvmdir}/src.zip
}
md5sums=('752721a037a625001fad7a5fc2013f60'
         '7ca382adb5dc4153e329d8a7ada53049'
         '32ad674d05c3af1ba4b0095a98a9d3f0'
         '1250ef03ba4951f475ca53ca7467a4bf'
         'e56d4fd9c38f3b21b901ab99b3c66e30'
         'd3beed0118bbd93d4651af762eb748c7'
         '36c6456514c8f398023c0f3cfefe6bf3'
         'f10b711b0c784df8707808d9d0f52abd'
         'ee1afda124d5927345014ab382ef581e'
         'f7e7a212e50abb56a6ef1a2b1bd27405'
         'c195c4865b84d9e2e0fd71ac6d88eadb'
         '203640d6e79e41b0065e016818c17ccd'
         'b7b8996448c7b4fa7dd2d744488ed3bd'
         'cdabafad0ec413d9a983888bf445a443'
         '612b0fec7e0943c37a6de77c43622007'
         '62443459da0cb28181feb260dc0e5ce7'
         'a4293acadff03bdccbc9b412ad288549')
