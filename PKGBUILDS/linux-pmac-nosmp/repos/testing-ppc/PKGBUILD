# $Id: PKGBUILD 130991 2011-07-09 12:23:51Z thomas $
# x86 Maintainer: Tobias Powalowski <tpowa@archlinux.org>
# x86 Maintainer: Thomas Baechler <thomas@archlinux.org>

pkgbase=linux-pmac-nosmp
pkgname=('linux-pmac-nosmp')
_kernelname=${pkgname#linux-pmac}
_basekernel=3.3
pkgver=${_basekernel}.2
pkgrel=1
arch=('ppc')
url="http://www.kernel.org/"
license=('GPL2')
options=('!strip')
source=("http://www.kernel.org/pub/linux/kernel/v3.x/linux-${_basekernel}.tar.xz"
        "http://www.kernel.org/pub/linux/kernel/v3.x/patch-${pkgver}.xz"
        # the main kernel config files
        'config'
        # standard config files for mkinitcpio ramdisk
        "${pkgname}.preset"
        'change-default-console-loglevel.patch'
        'ext4-options.patch')

build() {
  cd "${srcdir}/linux-${_basekernel}"

  # add upstream patch
  patch -p1 -i "${srcdir}/patch-${pkgver}"

  # add latest fixes from stable queue, if needed
  # http://git.kernel.org/?p=linux/kernel/git/stable/stable-queue.git

  # set DEFAULT_CONSOLE_LOGLEVEL to 4 (same value as the 'quiet' kernel param)
  # remove this when a Kconfig knob is made available by upstream
  # (relevant patch sent upstream: https://lkml.org/lkml/2011/7/26/227)
  patch -Np1 -i "${srcdir}/change-default-console-loglevel.patch"
  patch -Np1 -i "${srcdir}/ext4-options.patch"

  cat "${srcdir}/config" > ./.config

  if [ "${_kernelname}" != "" ]; then
    sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
  fi

  # set extraversion to pkgrel
  sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile

  # get kernel version
  ARCH=powerpc make prepare

  # load configuration
  # Configure the kernel. Replace the line below with one of your choice.
  #make menuconfig # CLI menu for configuration
  #make nconfig # new CLI menu for configuration
  #make xconfig # X-based configuration
  #make oldconfig # using old config from previous kernel version
  # ... or manually edit .config

  ####################
  # stop here
  # this is useful to configure the kernel
  #msg "Stopping build"
  #return 1
  ####################

  yes "" | make config

  # build!
  unset LDFLAGS
  ARCH=powerpc make ${MAKEFLAGS} vmlinux modules
}

package_linux-pmac-nosmp() {
  pkgdesc="The Linux Kernel and modules for PowerPC Mac"
  groups=('base')
  depends=('coreutils' 'linux-firmware' 'module-init-tools>=3.16' 'mkinitcpio>=0.7')
  optdepends=('crda: to set the correct wireless channels of your country')
  provides=('kernel26')
  conflicts=('kernel26-pmac' 'kernel26-pmac64')
  replaces=('kernel26-pmac64')
  backup=("etc/mkinitcpio.d/${pkgname}.preset")
  install=${pkgname}.install

  cd "${srcdir}/linux-${_basekernel}"

  KARCH=powerpc

  # get kernel version
  unset LDFLAGS
  _kernver="$(ARCH=powerpc make kernelrelease)"

  mkdir -p "${pkgdir}"/{lib/modules,lib/firmware,boot}
  make INSTALL_MOD_PATH="${pkgdir}" modules_install

  cp System.map ${pkgdir}/boot/System.map-pmac${_kernelname}
  cp vmlinux ${pkgdir}/boot/vmlinuz-linux-pmac${_kernelname}

  # add vmlinux symlink
  mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/
  ln -sf /boot/vmlinuz-linux-pmac${_kernelname} ${pkgdir}/usr/src/linux-${_kernver}/vmlinux-pmac${_kernelname}

  # install fallback mkinitcpio.conf file and preset file for kernel
  install -D -m644 "${srcdir}/${pkgname}.preset" "${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset"

  # set correct depmod command for install
  sed \
    -e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/g" \
    -e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
    -i "${startdir}/${pkgname}.install"
  sed \
    -e "s|ALL_kver=.*|ALL_kver=\"${_kernver}\"|g" \
    -e "s|default_image=.*|default_image=\"/boot/initramfs-${pkgname}.img\"|g" \
    -e "s|fallback_image=.*|fallback_image=\"/boot/initramfs-${pkgname}-fallback.img\"|g" \
    -i "${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset"

  # remove build and source links
  rm -f "${pkgdir}"/lib/modules/${_kernver}/{source,build}
  # remove the firmware
  rm -rf "${pkgdir}/lib/firmware"
  # gzip -9 all modules to save 100MB of space
  find "${pkgdir}" -name '*.ko' -exec gzip -9 {} \;
  # make room for external modules
  ln -s "../extramodules-${_basekernel}${_kernelname:--ARCHNOSMP}" "${pkgdir}/lib/modules/${_kernver}/extramodules"
  # add real version for building modules and running depmod from post_install/upgrade
  mkdir -p "${pkgdir}/lib/modules/extramodules-${_basekernel}${_kernelname:--ARCHNOSMP}"
  echo "${_kernver}" > "${pkgdir}/lib/modules/extramodules-${_basekernel}${_kernelname:--ARCHNOSMP}/version"
}

md5sums=('7133f5a2086a7d7ef97abac610c094f5'
         '68907107b0f62a19608588bdb6b29e20'
         '9dfe8c38cdeb0e0d50f5bd3f70d96cab'
         '9113475154bf416029f8df4ed2b3832f'
         '9d3c56a4b999c8bfbd4018089a62f662'
         'bb7fd1aa23016c8057046b84fd4eb528')
