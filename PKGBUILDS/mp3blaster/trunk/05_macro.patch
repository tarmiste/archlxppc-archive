Index: mp3blaster-3.2.5/mpegsound/rawtofile.cc
===================================================================
--- mp3blaster-3.2.5.orig/mpegsound/rawtofile.cc	2009-03-06 17:14:38.000000000 +0100
+++ mp3blaster-3.2.5/mpegsound/rawtofile.cc	2009-03-06 17:18:05.000000000 +0100
@@ -60,7 +60,7 @@
 // Rawplayer class
 Rawtofile::~Rawtofile()
 {
-	if (filetype == WAV)
+	if (filetype == ST_WAV)
 	{
 		off_t filelen = lseek(audiohandle, 0, SEEK_CUR);
 		lseek(audiohandle, 0, SEEK_SET);
@@ -110,10 +110,10 @@
 	return true;
 }
 
-/* set type of file to write. Default: RAW (no header) */
+/* set type of file to write. Default: ST_RAW (no header) */
 bool Rawtofile::setfiletype(soundtype filetype)
 {
-	if (filetype != RAW && filetype != WAV)
+	if (filetype != ST_RAW && filetype != ST_WAV)
 		return false;
 
 	this->filetype = filetype;	
@@ -121,13 +121,13 @@
 }
 int Rawtofile::putblock_nt(void *buffer, int size)
 {
-	if (init_putblock && filetype != RAW)
+	if (init_putblock && filetype != ST_RAW)
 	{
 		int wordsize;
 	
 		wordsize = rawsamplesize;
 
-		if (filetype == WAV)
+		if (filetype == ST_WAV)
 		{
 		//initial datasize = 0...when all data is written, determine filesize
 		//and rewrite the header.
Index: mp3blaster-3.2.5/src/main.cc
===================================================================
--- mp3blaster-3.2.5.orig/src/main.cc	2009-03-06 17:14:38.000000000 +0100
+++ mp3blaster-3.2.5/src/main.cc	2009-03-06 17:18:18.000000000 +0100
@@ -3644,7 +3644,7 @@
 
 			if (!(decoder = new Mpegfileplayer(Fileplayer::AUDIODRV_OSS)) ||
 				!decoder->openfile(file,
-				file2write, WAV) || !decoder->initialize(NULL))
+				file2write, ST_WAV) || !decoder->initialize(NULL))
 			{
 				sprintf(bla, "Decoding of %s failed.", selitems[i]);
 				warning(bla);
Index: mp3blaster-3.2.5/src/splay.cc
===================================================================
--- mp3blaster-3.2.5.orig/src/splay.cc	2009-03-06 17:14:38.000000000 +0100
+++ mp3blaster-3.2.5/src/splay.cc	2009-03-06 17:18:05.000000000 +0100
@@ -84,7 +84,7 @@
 
     player=new Mpegfileplayer(Fileplayer::AUDIODRV_OSS);
 		if (!strcmp(splay_devicename, "-"))
-			didopen = player->openfile(filename, "/dev/stdout", WAV);
+			didopen = player->openfile(filename, "/dev/stdout", ST_WAV);
 		else
 			didopen = player->openfile(filename, splay_devicename);
 
Index: mp3blaster-3.2.5/mpegsound/mpegsound.h
===================================================================
--- mp3blaster-3.2.5.orig/mpegsound/mpegsound.h	2009-03-06 17:18:00.000000000 +0100
+++ mp3blaster-3.2.5/mpegsound/mpegsound.h	2009-03-06 17:18:05.000000000 +0100
@@ -164,7 +164,7 @@
 };
 #endif
 
-enum soundtype { NONE, RAW, WAV };
+enum soundtype { ST_NONE, ST_RAW, ST_WAV };
 
 typedef struct _waveheader {
   u_int32_t     main_chunk;  // 'RIFF'
@@ -964,7 +964,7 @@
 
   int geterrorcode(void)        {return __errorcode;};
 	struct song_info getsonginfo() { return info;};
-  virtual bool openfile(const char *filename, const char *device, soundtype write2file=NONE)=0;
+  virtual bool openfile(const char *filename, const char *device, soundtype write2file=ST_NONE)=0;
   virtual void closefile(void)                       =0;
   virtual void setforcetomono(short flag)            =0;
 	virtual void setdownfrequency(int)                 =0;
@@ -986,7 +986,7 @@
 protected:
   Fileplayer(); //thou shallt not instantiate fileplayer itself.
 
-  bool opendevice(const char *device, soundtype write2file=NONE);
+  bool opendevice(const char *device, soundtype write2file=ST_NONE);
 	void set_driver(audiodriver_t driver);
   bool seterrorcode(int errorno){__errorcode=errorno;return false;};
   Soundplayer *player;
@@ -1012,7 +1012,7 @@
   Wavefileplayer(audiodriver_t driver);
   ~Wavefileplayer();
 
-  bool openfile(const char *filename, const char *device, soundtype write2file=NONE);
+  bool openfile(const char *filename, const char *device, soundtype write2file=ST_NONE);
   void closefile(void); 
   void setforcetomono(short flag);
 	void setdownfrequency(int value) { if (value); }
@@ -1045,7 +1045,7 @@
   Mpegfileplayer(audiodriver_t driver);
   ~Mpegfileplayer();
 
-  bool openfile(const char *filename, const char *device, soundtype write2file=NONE);
+  bool openfile(const char *filename, const char *device, soundtype write2file=ST_NONE);
   void closefile(void);
   void setforcetomono(short flag);
   void set8bitmode() { if (server) server->set8bitmode(); }
@@ -1093,7 +1093,7 @@
   Oggplayer(audiodriver_t driver);
   ~Oggplayer();
 
-  bool openfile(const char *filename, const char *device, soundtype write2file=NONE);
+  bool openfile(const char *filename, const char *device, soundtype write2file=ST_NONE);
   void closefile(void);
   void setforcetomono(short flag);
   void set8bitmode();
@@ -1140,7 +1140,7 @@
 	SIDfileplayer(audiodriver_t driver);
 	~SIDfileplayer();
 
-	bool openfile(const char *filename, const char *device, soundtype write2file=NONE);
+	bool openfile(const char *filename, const char *device, soundtype write2file=ST_NONE);
 	bool initialize(void *data) { if(data); return true; }
 	void closefile(void);
 	void setforcetomono(short flag);
